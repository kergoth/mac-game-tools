#!/bin/sh
# - Link 'Game' to the game install directory
# - Create support links
# - Set icon from the galaxy or game icon
# - If Galaxy, create extra launchers for other playTasks (i.e. Settings)
# - Change the program name & path, and flags, to set up this game to launch
# - Link docs from the game into Extras
# - If galaxy, rename the app to match the name from the info file

jq_value () {
    jq "$@" | sed 's,^",,; s,"$,,'
}

plist_set () {
    /usr/libexec/PlistBuddy -c "Set '$(printf "%s" "$1" | sed "s/'/\\\\'/g")' '$(printf "%s" "$2" | sed "s/'/\\\\'/g")'" "$3"
}

configure_icon () {
    icon_file="$1"
    icon_gamedest="$2"
    icondest="$(/usr/libexec/PlistBuddy -c "Print :CFBundleIconFile" "$icon_gamedest/Contents/Info.plist")"
    makeicns -in "$icon_file" -out "$icon_gamedest/Contents/Resources/$icondest"
    sips -i "$icon_gamedest/Contents/Resources/$icondest"
}

configure_icon_nogalaxy () {
    icon_game="$1"
    icon_gamedir="$2"

    mkdir -p "$icon_game/Icons"
    find "$icon_gamedir/" -name \*.ico | while read ico; do
        cp "$ico" "$icon_game/Icons"
    done

    find "$icon_gamedir/" -name \*.exe -print0 | \
        xargs -0 wrestool -x -t14 -o "$icon_game/Icons" 2>/dev/null || true

    rmdir "$icon_game/Icons" 2>/dev/null || true

    icondest="$(/usr/libexec/PlistBuddy -c "Print :CFBundleIconFile" "$icon_game/Contents/Info.plist")"
    if [ -d "$icon_game/Icons" ] && [ -n "$icondest" ]; then
        if [ -e "$icon_game/Icons/gfw_high.ico" ]; then
            configure_icon "$icon_game/Icons/gfw_high.ico" "$icon_game"
            rm -rf "$icon_game/Icons"
        else
            cat >"$icon_game/Icons/finish" <<END
#!/bin/sh

scriptdir="\$(cd "\$(dirname "\$0")" && pwd)"
cd "\$scriptdir"
if ls *.icns &>/dev/null; then
    app="\${scriptdir%/*}"
    icns="\$(find . -iname "*.icns" | head -n 1)"
    cp "\$icns" "\$app/Contents/Resources/$icondest"
    sips -i "\$app/Contents/Resources/$icondest"
    rm -rf "\$scriptdir"
fi
END
            chmod +x "$icon_game/Icons/finish"
            open "$icon_game/Icons"
        fi
    fi
}


scriptdir="$(cd "$(dirname "$0")" && pwd -P)"
PATH="$scriptdir:$PATH"

if [ $# -eq 0 ]; then
    echo >&2 "Usage: ${0##*/} GAME_APP"
    exit 1
fi

cd "$1"
game="$PWD"
gamedir="$(find "drive_c/GOG Games" -depth 1 -type d 2>/dev/null | head -n 1)"
if [ -z "$gamedir" ]; then
    gamedir="$(find "drive_c/Program Files/GalaxyClient/Games" -depth 1 -type d -not -name '!Downloads' | head -n 1)"
    if [ -z "$gamedir" ]; then
        echo >&2 "Error: game install directory not found"
        exit 3
    fi
fi
rm -f Game
ln -sv "$gamedir" Game

mkdir -p Extras
infofile="$(find "$gamedir" -name goggame-\*.info -maxdepth 1)"
if [ -n "$infofile" ]; then
    "$scriptdir/finalize_galaxy" "$game"
    # finalize_galaxy may rename the game and gamedir based on metadata
    gamedir="$(readlink Game)"
else
    configure_icon_nogalaxy "$game" "$gamedir"
    exepath="$(find "$gamedir" -iname \*.exe | head -n 1)"
    exepath="${exepath#$gamedir/}"
    wine_gamedir="/${gamedir#drive_c/}"
    plist_set "Program Name and Path" "$wine_gamedir/$exepath" Contents/Info.plist
    plist_set "Program Flags" "" Contents/Info.plist
    if [ ! -e Contents/Resources/finalize_galaxy ]; then
        cp "$scriptdir/finalize_galaxy" Contents/Resources/
    fi
    cat >finalize_galaxy <<END
#!/bin/sh
scriptdir="\$(cd "\$(dirname "\$0")" && pwd -P)"
cd "\$scriptdir"
"./Contents/Resources/finalize_galaxy" . && \
    rm -fv "./\${0##*/}" "./Contents/Resources/finalize_galaxy"
END
    chmod +x finalize_galaxy
fi

find "$gamedir" -maxdepth 1 -type f | \
    grep -Ei '\.(pdf|txt|doc|rtf|html?)$' | \
    while read doc; do
        if [ ! -e "Extras/${doc##*/}" ]; then
            ln -svf "../$doc" "Extras"
        fi
    done
rmdir "$game/Extras" 2>/dev/null || true
