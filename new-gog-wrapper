#!/bin/sh

locate_app_by_id () {
    mdfind "kMDItemContentType == 'com.apple.application-bundle' && kMDItemCFBundleIdentifier == '$*'"
}

usage () {
    echo >&2 "Usage: ${0##*/} [-t TEMPLATE_PATH] WRAPPER_PATH [WRAPPER_NAME]"
    exit 2
}

process_arguments () {
    template=

    while getopts t:h opt; do
        case "$opt" in
            t)
                template="$OPTARG"
                if [ ! -e "$template" ]; then
                    echo >&2 "Error: template path '$template' does not exist"
                    usage
                fi
                ;;
            h|\?)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [ $# -eq 0 ] || [ $# -gt 2 ]; then
        echo >&2 "Error: incorrect number of arguments"
        usage
    fi

    wrapper_path="$1"
    if [ -e "$wrapper_path" ]; then
        echo >&2 "Error: $wrapper_path already exists"
        exit 1
    fi

    if [ $# -eq 2 ]; then
        wrapper_name="$2"
    else
        wrapper_name="$(basename "$wrapper_path" | sed -e "s/\.app$//")"
    fi
}

plist_set () {
    /usr/libexec/PlistBuddy -c "Set '$(printf "%s" "$1" | sed "s/'/\\\\'/g")' '$(printf "%s" "$2" | sed "s/'/\\\\'/g")'" "$3/Contents/Info.plist"
}


set -e

scriptdir="$(cd "$(dirname "$0")" && pwd -P)"
PATH="$scriptdir:$PATH"

process_arguments "$@"

if [ -z "$template" ]; then
    template="$(locate_app_by_id "org.kergoth.gog.GOG Galaxy for Windows" | head -n 1)"
    if [ -z "$template" ]; then
        template="$(locate_app_by_id "GOG Galaxy for Windows.Wineskin.prefs" | head -n 1)"
        if [ -z "$template" ]; then
            echo >&2 "Error: unable to locate 'GOG Galaxy for Windows.app'"
            exit 2
        fi
    fi
fi
echo >&2 "Template: $template"
cp -a "$template" "$wrapper_path"
plist_set CFBundleIdentifier "org.kergoth.gog.$(printf "%s" "$wrapper_name" | tr '[:upper:]' '[:lower:]' | tr ' ' '_')" "$wrapper_path"
plist_set CFBundleName "$wrapper_name" "$wrapper_path"
plist_set CFBundleDisplayName "$wrapper_name" "$wrapper_path"
plist_set CFBundleShortVersionString GOG "$wrapper_path"
rm "$wrapper_path/Games"

cp "$scriptdir/finalize_gog" "$wrapper_path/Contents/Resources/"
cp "$scriptdir/finalize_galaxy" "$wrapper_path/Contents/Resources/"
cp "$scriptdir/get-gamedir" "$wrapper_path/Contents/Resources/" cat >"$wrapper_path/finalize_gog" <<END
#!/bin/sh
cd "\$(dirname "\$0")"
Contents/Resources/finalize_gog . && rm -f finalize_gog Contents/Resources/finalize_gog
if [ \$? -eq 0 ] && [ ! -e finalize_galaxy ]; then
    rm -f Contents/Resources/finalize_galaxy Contents/Resources/get-gamedir
fi
END
chmod +x "$wrapper_path/finalize_gog"

if which tag >/dev/null 2>&1; then
    tag -a Game "$wrapper_path"
fi
