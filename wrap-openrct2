#!/bin/bash

set -euo pipefail

usage () {
    cat <<END >&2
Usage: ${0##*/} [options] GAME_DIR [DEST_APP]

Options:

  -c             Check only. Return 0 if the game is supported by this script, 10 if not.
  -n             No copy. This disables copying the game dir into the app, so
                 you can make such arrangements yourself, or in a calling script.
  -r REL_PATH    Specify the relative path to the game dir from the
                 Contents/Resources dir in the app. Default: ../../Game.
END
    exit 1
}

process_arguments () {
    check_only=0
    no_copy=0
    rel_path=../../Game

    while getopts cnr:h opt; do
        case "$opt" in
            c)
                check_only=1
                ;;
            n)
                no_copy=1
                ;;
            r)
                rel_path="$OPTARG"
                ;;
            h|\?)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [ $# -eq 0 ] || [ $# -gt 2 ]; then
        echo >&2 "Error: incorrect number of arguments"
        usage
    fi

    gamedir="$(cd "$1" && pwd -P)"
    if [ $# -gt 1 ]; then
        destdir="${2%.app}.app"
    else
        destdir="${gamedir##*/}.app"
    fi
}

check_supported () {
    if [ -z "$(find "$gamedir"/ -iname rct2.exe -maxdepth 1)" ]; then
        # Game unsupported
        if [ $check_only -eq 0 ]; then
            echo >&2 "Error: $gamedir is unsupported"
        fi
        exit 10
    fi

    if [ $check_only -eq 1 ]; then
        exit 0
    fi
}

locate_app_by_id () {
    mdfind "kMDItemContentType == 'com.apple.application-bundle' && kMDItemCFBundleIdentifier == '$*'"
}


process_arguments "$@"
check_supported

if [ -e "$destdir" ]; then
    echo >&2 "Error: $destdir already exists, aborting"
    exit 2
fi

openrct2="$(locate_app_by_id "website.openrct2.OpenRCT2" | sed 's,$,/Contents/MacOS/OpenRCT2,' | nlxargs ls -t | head -n 1 | sed 's,/Contents/MacOS/OpenRCT2,,')"
if [ -z "$openrct2" ]; then
    echo >&2 "Error: unable to locate OpenRCT2, please make it available."
    return 1
fi
echo >&2 "OpenRCT2: $openrct2"

new-app "$destdir"
if [ ! -e "$destdir" ]; then
    mv "$destdir.app" "$destdir"
fi
copymacicon "$openrct2" "$destdir"
cp -a "$openrct2" "$destdir"
cp -a "$(which lnr)" "$destdir/Contents/Resources/"

rm -rf "$destdir/Game"
if [ $no_copy -eq 0 ]; then
    cp -a "$gamedir" "$destdir/Game"
    if [ "$rel_path" != "../../Game" ]; then
        echo >&2 "Warning: copying game, ignoring specified rel_path $rel_path"
    fi
else
    cat <<END >"$destdir/finalize_wrapper"
#!/bin/sh
cd "\$(dirname "\$0")"
gamedir="Contents/Resources/\$rel_path"
if [ -L Game ]; then
    gamedir="\$(readlink Game)"
    if [ -d "\$gamedir" ]; then
        (
            set -e
            rm Game
            mv "\$gamedir" Game
            ./Contents/Resources/lnr Game "\$gamedir"
            rm -f ./Contents/Resources/lnr "\${0##*/}"
        ) || ln -s "\$gamedir" Game
    fi
fi
END
fi
chmod +x "$destdir/finalize_wrapper"

cat <<END >"$destdir/Contents/MacOS/app"
#!/bin/sh
cd "\$(dirname "\$0")/../.."
./OpenRCT2.app/Contents/MacOS/OpenRCT2 set-rct2 Game
exec ./OpenRCT2.app/Contents/MacOS/OpenRCT2 "\$@"
END
chmod +x "$destdir/Contents/MacOS/app"

game_name="${destdir%.app}"
game_name="${game_name##*/}"
app_set_metadata -n "$game_name" -d "$game_name" \
                 -i "com.kergoth.openrct2.$game_name" "$destdir"
