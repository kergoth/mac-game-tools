#!/bin/sh

wrap_installer () {
    wrap_exe="$1"
    wrap_out="$2"
    wrap_name="$3"
    wrap_app_name="$4"

    new-gog-wrapper "$wrap_out" "$wrap_name"
    games_dir="$wrap_out/drive_c/GOG Games"
    mkdir -p "$games_dir"
    install-gog "$wrap_exe" "$games_dir/$wrap_app_name"
    rm -f "$wrap_out/Game"
    ln -s "$(readlink "$games_dir")/$wrap_app_name" "$wrap_out/Game"
    rm -f "$wrap_out/finalize_gog" "$wrap_out/Contents/Resources/finalize_gog"
    finalize_gog "$wrap_out"
    if [ -d "$wrap_out" ]; then
        mv "$wrap_out" "$wrap_name.app"
    fi
}

if [ $# -eq 0 ]; then
    echo >&2 "Usage: ${0##*/} GOG_INSTALLER"
    exit 2
fi

set -e

scriptdir="$(cd "$(dirname "$0")" && pwd)"
PATH="$scriptdir:$PATH"

installer="$1"
if [ $# -gt 1 ]; then
    game_name="${2%.app}"
    app_name="$game_name.app"
else
    game_name="$(gog-installer-get-name "$installer")"
    app_name="$(echo "$game_name" | tr -d :/).app"
fi
if [ -e "$app_name" ]; then
    echo >&2 "Warning: $app_name already exists, skipping"
    exit 1
fi
echo >&2 "Creating $app_name"

tmp="$(mktemp -d "$app_name.XXXXXX")" || exit 1
rmdir "$tmp"
trap 'rm -rf "$tmp"' EXIT INT TERM

wrap_installer "$installer" "$tmp" "$game_name" "$app_name"
