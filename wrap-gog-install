#!/bin/sh

set -euo pipefail

usage () {
    cat <<END >&2
Usage: ${0##*/} [options] GAME_DIR [DEST_APP]

Options:

  -l    Symlink the GAME_DIR
  -m    Move the GAME_DIR
  -c    Copy the GAME_DIR (default)
  -t TEMPLATE_PATH  Path to the Wineskin wrapper template. Default: find with spotlight
END
    exit 1
}

process_arguments () {
    template=
    mode=copy

    while getopts lmct:h opt; do
        case "$opt" in
            l)
                mode=symlink
                ;;
            m)
                mode=move
                ;;
            c)
                mode=copy
                ;;
            t)
                template="$OPTARG"
                if [ ! -e "$template" ]; then
                    echo >&2 "Error: template path '$template' does not exist"
                    usage
                fi
                ;;
            h|\?)
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [ $# -eq 0 ] || [ $# -gt 2 ]; then
        echo >&2 "Error: incorrect number of arguments"
        usage
    fi

    gamedir="$(cd "$1" && pwd)"
    if [ $# -gt 1 ]; then
        game_name="${2%.app}"
    else
        if [ -h "$gamedir" ]; then
            gamedir="$(abs_readlink "$gamedir")"
        fi
        game_name="${gamedir##*/}"
    fi
    gamedir="$(cd "$1" && pwd -P)"
    app_name="$(echo "$game_name" | tr -d :/).app"
}

abs_readlink () {
    for arg; do
        abspath "$(readlink "$arg")" "$(dirname "$arg")"
    done
}

abspath () {
    _path="$1"
    if [ -n "${_path##/*}" ]; then
        _path="${2:-$PWD}/$1"
    fi
    echo "$_path"
}

wrap_install () {
    wrap_installdir="$1"
    wrap_out="$2"
    wrap_name="$3"

    if [ -n "$template" ]; then
        new-gog-wrapper -t "$template" "$wrap_out" "$wrap_name"
    else
        new-gog-wrapper "$wrap_out" "$wrap_name"
    fi

    case "$mode" in
        copy)
            cp -a "$wrap_installdir" "$wrap_out/drive_c/GOG Games/$wrap_name"
            ;;
        move)
            mv "$wrap_installdir" "$wrap_out/drive_c/GOG Games/$wrap_name"
            ;;
        symlink)
            lnr "$wrap_installdir" "$wrap_out/drive_c/GOG Games/$wrap_name"
            ;;
    esac
    rm -f "$wrap_out/Game"
    ln -s "drive_c/GOG Games/$wrap_name" "$wrap_out/Game"
    cp -f "$scriptdir/finalize_gog" "$scriptdir/finalize_galaxy" "$wrap_out/Contents/Resources/"
    "$wrap_out/finalize_gog"
}


scriptdir="$(cd "$(dirname "$0")" && pwd)"
PATH="$scriptdir:$PATH"

process_arguments "$@"

if [ -e "$app_name" ]; then
    echo >&2 "Warning: $app_name already exists, skipping"
    exit 1
fi
echo >&2 "Creating $app_name"

tmp="$(mktemp -d "${0##*/}.XXXXXX")"
rmdir "$tmp"
trap 'rm -rf "$tmp"' EXIT INT TERM

wrap_install "$gamedir" "$tmp" "$game_name"
if [ -d "$tmp" ]; then
    mv "$tmp" "$app_name"
fi
